# from db import *
# import utils
# from datetime import datetime
# from aiogram import Bot, Dispatcher, types
# from aiogram.types import ParseMode
# from aiogram import executor
# from config import *
# from keyboards import *
# import time
# import asyncio, json, logging, qrcode, random, re, sqlite3, string, datetime
# from datetime import datetime as dt
# from io import BytesIO
# from aiogram import Bot, Dispatcher, executor, types
# from aiogram.types import ParseMode, User
# from aiogram.types.message import ContentType
# from aiogram.contrib.fsm_storage.memory import MemoryStorage
# from aiogram.dispatcher.filters.state import State, StatesGroup
# from aiogram.dispatcher import FSMContext
# from logging.handlers import RotatingFileHandler
# import aiohttp
# from config import TOKEN
# from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
# import asyncio
# import datetime

# bot = Bot(token=TOKEN)
# dp = Dispatcher(bot, storage=MemoryStorage())
# variable = utils.Variable()


# @dp.message_handler(commands=['admin'])
# async def admin_panel(message: types.Message):
#     if message.chat.id == admin_id:
#         a = allusers()
#         await bot.send_message(message.chat.id, f"–ê–î–ú–ò–ù –ü–ê–ù–ï–õ–¨\n\n–í–°–ï–ì–û –ö–û–ù–§–ò–ì–û–í {a}",reply_markup=kb_admin_panel)

# @dp.message_handler(commands=['start'])
# async def send_welcome(message: types.Message):
#     add = checkuser(message.chat.id)
#     if add:
#         await bot.send_photo(chat_id=message.chat.id,photo=open('start.png', 'rb'),caption="<b>üëã –ü—Ä–∏–≤–µ—Ç! –†–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–π VPN-—Å–µ–º—å–µ!\n\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –±–µ–∑–æ–ø–∞—Å–Ω—ã–º –∏ —Å–≤–æ–±–æ–¥–Ω—ã–º –¥–æ—Å—Ç—É–ø–æ–º –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.\n\nüöÄ –ù–∞—à–∏ —Å–µ—Ä–≤–µ—Ä—ã –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –≤—ã—Å–æ–∫—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å, –∞ –≤–∞—à–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –ø–æ–¥ –∑–∞—â–∏—Ç–æ–π. </b>",reply_markup=keyboard_start,parse_mode="html")

#     else:
       
#         referral_code = message.text[7:]
#         print(referral_code)
#         if len(referral_code)>2:
#             adduserref(message.chat.id,referral_code)
#         else:
#             adduser(message.chat.id)
        
#         await bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç! {message.from_user.username}\n–í–∏–∂—É —Ç—ã —Ç—É—Ç –≤–ø–µ—Ä–≤—ã–µ. –£ –Ω–∞—Å –¥–ª—è –¢–ï–ë–Ø –ø–æ–¥–∞—Ä–æ—á–Ω—ã–π –≤–ø–Ω –Ω–∞ 7 –î–ù–ï–ô\n–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ –±—ã –∏–º –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è",reply_markup=kb_next)
        





# @dp.callback_query_handler(lambda call: True)
# async def print_all_commands(call: types.CallbackQuery):
#     if call.data == "try3":
#       session_id = await login()
#       if session_id:
#           telegram_id = call.message.from_user.id
          
#           user = trialcheck(telegram_id)

#           if user:
#               await call.message.answer("‚ùå –í–∞–º —É–∂–µ –≤—ã–¥–∞–≤–∞–ª—Å—è –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ üßê")
#               bot_logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {telegram_id} –ø–æ–ø—ã—Ç–∞–ª—Å—è –ø–æ–≤—Ç–æ—Ä–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥.")
#           else:
#               id_vless = 1
#               email = ''.join(random.choices(string.ascii_lowercase + string.digits, k=12))
#               expiry_time = -259200000
#               await call.message.answer(f"‚úÖ –ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! \n–í–∞—à –ª–æ–≥–∏–Ω: {email}")
#               #await add_client(call.message, email, expiry_time, id_vless, call.message.from_user.id)
#               bot_logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {call.message.from_user.id} –Ω–∞—á–∞–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥.")
#       else:
#           await call.message.answer("‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏.")
#           bot_logger.error("–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞.")
#     elif call.data == "freeevpn":
#         await bot.send_message(call.message.chat.id,"–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –¢–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª –∏ —Å—Ä–∞–∑—É –ø–æ–ª—É—á–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π VPN",reply_markup=kbkanal)
#     elif call.data == "podpiska":
#         try:
#             a = getactualdata(call.message.chat.id)
#             print(a)
#             ip = getipfromemail(a)
#             url = f"http://{ip}:22054/login"
#             session = await sessionid(url)
#             day = await listall(ip, session, a)
#             if day != None:
#                 kb_prodlenye = types.InlineKeyboardMarkup(row_width=1)
#                 kp1 = types.InlineKeyboardButton(text="üìÜ 1 –ú–ï–°–Ø–¶ - 149",callback_data=f"t1_{a}")
#                 kp2 = types.InlineKeyboardButton(text="üìÜ 3 –ú–ï–°–Ø–¶–ê - 339",callback_data=f"t2_{a}")
#                 kp4 = types.InlineKeyboardButton(text="üìÜ –ì–û–î - 1139",callback_data=f"t4_{a}")
#                 backbtn = types.InlineKeyboardButton(text="–ù–ê–ó–ê–î ‚óÄÔ∏è",callback_data="backst")
#                 kb_prodlenye.add(kp1,kp2,kp4,backbtn)
#                 await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id,caption = f"–ê–∫—Ç–∏–≤–Ω–æ –¥–æ {day}\n–ü—Ä–æ–¥–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∫–Ω–æ–ø–∫–∞–º –Ω–∏–∂–µ",reply_markup=kb_prodlenye,parse_mode="html")
#             else:
#                 await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id,caption = f"–ü–æ–¥–ø–∏—Å–∫–∏ –Ω–µ—Ç, –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –º–æ–∂–Ω–æ –ø–æ –∫–Ω–æ–ø–∫–∞–º –Ω–∏–∂–µ",reply_markup=kb_tarif,parse_mode="html")
#         except:
#             await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id,caption = f"–ü–æ–¥–ø–∏—Å–∫–∏ –Ω–µ—Ç, –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –º–æ–∂–Ω–æ –ø–æ –∫–Ω–æ–ø–∫–∞–º –Ω–∏–∂–µ",reply_markup=kb_tarif,parse_mode="html")

    
#     elif call.data == "mycfg":
#         cfgs = selectcfg(call.message.chat.id)
#         print(cfgs)
#         keyboard = InlineKeyboardMarkup()
        
#         # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –º–∞—Å—Å–∏–≤ –∫–æ—Ä—Ç–µ–∂–µ–π
#         for item in cfgs:
#             # item[0] —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç –∏ callback_data
#             button = InlineKeyboardButton(text=item[0], callback_data=item[0])
#             keyboard.add(button)
#         backbtn = types.InlineKeyboardButton(text="–ù–ê–ó–ê–î ‚óÄÔ∏è",callback_data="backst")
#         keyboard.add(backbtn)
#         await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id,caption="<b>üçè –ê–ö–¢–ò–í–ù–´–ï VPN –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø</b>",reply_markup=keyboard,parse_mode="html")
#     elif call.data == "donech":
#         free = checkfree(call.message.chat.id)
#         print(free)
#         if free != "1":
#             result =  await is_user_subscribed(call.message.chat.id)
#             if result:
#                 unoxxx = print_and_convert_to_unix(7)
#                 mail = generate_key()
#                 url,session = await add_client_request(call.message.chat.id,mail,unoxxx)
#                 print(url,session)
#                 vless_cfg = createcfgbymail(url,session,mail)
#                 savecfg(call.message.chat.id,vless_cfg,mail)
#                 addfreecfg(call.message.chat.id)
#                 await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text = f"–í–∞—à –∫–æ–Ω—Ñ–∏–≥<code>\n\n{vless_cfg}</code>\n\n—á—Ç–æ –±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –Ω—É–∂–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é",reply_markup=kb_instss,parse_mode="html")
#             else:
#                 await bot.answer_callback_query(callback_query_id=call.id,text= "–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ Telegram –ö–ê–ù–ê–õ",show_alert = True)
        
#         else:
#             await bot.send_message(call.message.chat.id,"–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–æ–±–Ω—ã–π VPN")
#     elif call.data == "backsts_1":
#         await bot.send_photo(chat_id=call.message.chat.id,photo=open('start.png', 'rb'),caption="<b>üëã –ü—Ä–∏–≤–µ—Ç! –†–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–π VPN-—Å–µ–º—å–µ!\n\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –±–µ–∑–æ–ø–∞—Å–Ω—ã–º –∏ —Å–≤–æ–±–æ–¥–Ω—ã–º –¥–æ—Å—Ç—É–ø–æ–º –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.\n\nüöÄ –ù–∞—à–∏ —Å–µ—Ä–≤–µ—Ä—ã –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –≤—ã—Å–æ–∫—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å, –∞ –≤–∞—à–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –ø–æ–¥ –∑–∞—â–∏—Ç–æ–π. </b>",reply_markup=keyboard_start,parse_mode="html")

    
#     elif call.data == "balance":
#         bal = int(getbalance(call.message.chat.id))
#         await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f"üë§ –í–∞—à id {call.message.chat.id}\n\n<b>üí∞ –ë–∞–ª–∞–Ω—Å  {bal}</b>\n",reply_markup=kb_balance,parse_mode='html')
#     elif call.data == "addcash":
#         # await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f"–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è",reply_markup=kb_back,parse_mode='html')
#         await bot.edit_message_caption(
#         chat_id=call.message.chat.id,
#         message_id=call.message.message_id,
#         caption="–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—é:",
#         reply_markup=kb_back,
#         parse_mode='html'
#         )
#         variable.set_action(call.message.chat.id, 2)

#     elif call.data == "addcfg":
        
#         await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f"<b>–í–´–ë–ï–†–ï–¢–ï –í–ê–†–ò–ê–ù–¢–´ –ü–û–î–ü–ò–°–ö–ò üìù</b>",reply_markup=kb_tarif,parse_mode='html')
#     elif call.data == "addserver":
#         await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,text="–ù–ê–ü–ò–®–ò–¢–ï IP –°–ï–†–í–ï–†–ê",reply_markup=kb_admin_back)
#         variable.set_action(call.message.chat.id,10)
#     elif call.data == "servers":
#         a = serverslist()
#         keyboard = InlineKeyboardMarkup()

#         # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –º–∞—Å—Å–∏–≤ –∫–æ—Ä—Ç–µ–∂–µ–π
#         for item in a:
#             # item[0] —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç –∏ callback_data
#             button = InlineKeyboardButton(text=item[0], callback_data=f"server_{item[0]}")
#             keyboard.add(button)
#         addserv = types.InlineKeyboardButton(text="–î–û–ë–ê–í–ò–¢–¨ –°–ï–†–í–ï–†",callback_data="addserver")
#         backbtn = types.InlineKeyboardButton(text="–ù–ê–ó–ê–î ‚óÄÔ∏è",callback_data="backad")
#         keyboard.add(addserv).row(backbtn)


#         await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,text="–°–ü–ò–°–û–ö –ê–ö–¢–£–ê–õ–¨–ù–´–• –°–ï–†–í–ï–†–û–í",reply_markup=keyboard)
#     elif call.data == "a_balance":
#         pass
    

#     elif call.data == "allreboot":
#         pass
#     elif call.data == "backad":
#         variable.set_action(call.message.chat.id, 0)
#         a = allusers()
        
#         await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,text=f"–ê–î–ú–ò–ù –ü–ê–ù–ï–õ–¨\n\n–í–°–ï–ì–û –ö–û–ù–§–ò–ì–û–í {a}",reply_markup=kb_admin_panel)
#     elif call.data == "t1":
        
#         a = checkbal(call.message.chat.id, 149)
        
#         if a:
#             minbal(call.message.chat.id,149)
#             unoxxx = print_and_convert_to_unix(30)
#             mail = generate_key()
#             url,session = await add_client_request(call.message.chat.id,mail,unoxxx)
#             print(url,session)
#             vless_cfg = createcfgbymail(url,session,mail)
#             savecfg(call.message.chat.id,vless_cfg,mail)
            
#             await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id, caption = f"–í–∞—à –∫–æ–Ω—Ñ–∏–≥<code>\n\n{vless_cfg}</code>\n\n—á—Ç–æ –±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –Ω—É–∂–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é",reply_markup=kb_insts,parse_mode="html")
#         else:
#             await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id,caption =  f"–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ",reply_markup=kb_popln)
        

#     elif call.data == "t2":
        
#         a = checkbal(call.message.chat.id, 339)
        
#         if a:
#             minbal(call.message.chat.id,339)
#             unoxxx = print_and_convert_to_unix(90)
#             mail = generate_key()
#             url,session = await add_client_request(call.message.chat.id,mail,unoxxx)
#             print(url,session)
#             vless_cfg = createcfgbymail(url,session,mail)
#             savecfg(call.message.chat.id,vless_cfg,mail)
            
#             await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id, caption = f"–í–∞—à –∫–æ–Ω—Ñ–∏–≥<code>\n\n{vless_cfg}</code>\n\n—á—Ç–æ –±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –Ω—É–∂–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é",reply_markup=kb_insts,parse_mode="html")
#         else:
#             await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id,caption =  f"–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ",reply_markup=kb_popln)
        
#     elif call.data == "t3":
        
#         a = checkbal(call.message.chat.id, 619)
        
#         if a:
#             minbal(call.message.chat.id,619)
#             unoxxx = print_and_convert_to_unix(180)
#             mail = generate_key()
#             url,session = await add_client_request(call.message.chat.id,mail,unoxxx)
#             print(url,session)
#             vless_cfg = createcfgbymail(url,session,mail)
#             savecfg(call.message.chat.id,vless_cfg,mail)
            
#             await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id, caption = f"–í–∞—à –∫–æ–Ω—Ñ–∏–≥<code>\n\n{vless_cfg}</code>\n\n—á—Ç–æ –±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –Ω—É–∂–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é",reply_markup=kb_insts,parse_mode="html")
#         else:
#             await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id,caption =  f"–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ",reply_markup=kb_popln)
        
#     elif call.data == "t4":
        
#         a = checkbal(call.message.chat.id, 1139)
        
#         if a:
#             minbal(call.message.chat.id,1139)
#             unoxxx = print_and_convert_to_unix(365)
#             mail = generate_key()
#             url,session = await add_client_request(call.message.chat.id,mail,unoxxx)
#             print(url,session)
#             vless_cfg = createcfgbymail(url,session,mail)
#             savecfg(call.message.chat.id,vless_cfg,mail)
            
#             await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id, caption = f"–í–∞—à –∫–æ–Ω—Ñ–∏–≥<code>\n\n{vless_cfg}</code>\n\n—á—Ç–æ –±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –Ω—É–∂–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é",reply_markup=kb_insts,parse_mode="html")
#         else:
#             await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id,caption =  f"–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ",reply_markup=kb_popln)
    

#     elif call.data =="h1":
#         await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption="–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å–æ–±–∏—Ä–∞–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤\n\n–ü—Ä–∏ –ª—é–±–æ–º –≤–æ–ø—Ä–æ—Å–µ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –°–∞–ø–ø–æ—Ä—Ç—É",reply_markup=kb_back)
        
#     elif call.data == "tarif":
#       await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption="<b>–ù–ê –í–°–ï–• –¢–ê–†–ò–§–ê–• –ë–ï–ó–õ–ò–ú–ò–¢–ù–´–ô –¢–†–ê–§–ò–ö\n\n–ß—Ç–æ –≤–∞–º –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –Ω–∞—à VPN:\n\nüîí –ó–∞—â–∏—Ç–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏: VPN —à–∏—Ñ—Ä—É–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–µ —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –Ω–µ–≤–æ–∑–º–æ–∂–Ω—ã–º –∏—Ö –ø–µ—Ä–µ—Ö–≤–∞—Ç –∏ —á—Ç–µ–Ω–∏–µ —Ç—Ä–µ—Ç—å–∏–º–∏ –ª–∏—Ü–∞–º–∏. \nüì∫ –î–æ—Å—Ç—É–ø –∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É: –û–±—Ö–æ–¥–∏—Ç–µ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —Å–∞–π—Ç–∞–º –∏ —Å–µ—Ä–≤–∏—Å–∞–º, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –≤ –≤–∞—à–µ–º —Ä–µ–≥–∏–æ–Ω–µ. \nüöÄ –í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å: –ù–∞—à–∏ —Å–µ—Ä–≤–µ—Ä—ã —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –±—ã—Å—Ç—Ä–æ–µ –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.\nüö´ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ä–µ–∫–ª–∞–º—ã: –ò–∑–±–∞–≤—å—Ç–µ—Å—å –æ—Ç –Ω–∞–∑–æ–π–ª–∏–≤–æ–π —Ä–µ–∫–ª–∞–º—ã –∏ —É–≤–µ–ª–∏—á—å—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü.\nüõ°Ô∏è –ó–∞—â–∏—Ç–∞ –æ—Ç –≤–∏—Ä—É—Å–æ–≤: –ù–∞—à VPN –∑–∞—â–∏—â–∞–µ—Ç –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –æ—Ç –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º –∏ –≤–∏—Ä—É—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø–æ–ø–∞—Å—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç.\nüíª –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: VPN –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—Å–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã (Windows, MacOS, Linux, Android, iOS). \n\n–°–¢–û–ò–ú–û–°–¢–¨ –¢–ê–†–ò–§–û–í:\n\n‚Ä¢ üóì –ú–µ—Å—è—Ü: 250 —Ä—É–±. \n‚Ä¢ üóì –î–≤–∞ –º–µ—Å—è—Ü–∞: 450 —Ä—É–±.\n‚Ä¢ üóì –ü–æ–ª–≥–æ–¥–∞: 1300 —Ä—É–±.\n‚Ä¢ üóì –ì–æ–¥: 2500 —Ä—É–±.</b>",reply_markup=kb_tarif,parse_mode="html")
#     elif call.data == "invite":
#         refbal = refbala(call.message.chat.id)
#         kolvoref = refuser(call.message.chat.id)
#         kb_ref_1 =  types.InlineKeyboardMarkup(row_width=1)
#         kr = types.InlineKeyboardButton(text="–í—ã–≤–æ–¥",callback_data="refvivod")
#         kpod = types.InlineKeyboardButton(text="–ü–û–î–ï–õ–ò–¢–¨–°–Ø",switch_inline_query=f"–ü–†–ô–î–ò –°–Æ–î–ê –ü–ê–ñ {botname}?start={call.message.chat.id}")
#         backbtn = types.InlineKeyboardButton(text="–ù–ê–ó–ê–î ‚óÄÔ∏è",callback_data="backst")
#         kb_ref_1.add(kr,kpod,backbtn)
        
#         await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'<b>–ü–ê–†–¢–ù–ï–†–°–ö–ê–Ø –ü–†–û–ì–†–ê–ú–ú–ê\n\n–£–°–õ–û–í–ò–Ø:\n\n–ü—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –≤–∞—à–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –Ω–∞ –ª—é–±—É—é —Å—É–º–º—É –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 10% –æ—Ç —Å—É–º–º—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞ –≤–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å, —á—Ç–æ –±—ã –≤—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω–µ–∂–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ –∫–Ω–æ–ø–∫—É –≤—ã–≤–æ–¥ –∏ —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –¥–∞–ª–µ–µ –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–∏ 48 —á–∞—Å–æ–≤\n\n–°–°–´–õ–ö–ê </b><code>{botname}?start={call.message.chat.id}</code>\n\n<b>–í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å {refbal}\n\n–ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ {kolvoref}</b>',reply_markup=kb_ref_1,parse_mode="html")
#     elif call.data == "backststst":
#         variable.set_action(call.message.chat.id, 0)
#         await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id,caption="<b>üëã –ü—Ä–∏–≤–µ—Ç! –†–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–π VPN-—Å–µ–º—å–µ!\n\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –±–µ–∑–æ–ø–∞—Å–Ω—ã–º –∏ —Å–≤–æ–±–æ–¥–Ω—ã–º –¥–æ—Å—Ç—É–ø–æ–º –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.\n\nüöÄ –ù–∞—à–∏ —Å–µ—Ä–≤–µ—Ä—ã –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –≤—ã—Å–æ–∫—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å, –∞ –≤–∞—à–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –ø–æ–¥ –∑–∞—â–∏—Ç–æ–π. </b>",reply_markup=keyboard_start,parse_mode="html")

#     elif call.data =="help":
#         await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id, caption="<b>–í—ã–±–µ—Ä–µ—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é</b>",reply_markup=kb_help,parse_mode="html")
#     elif call.data == "backsts":
#         variable.set_action(call.message.chat.id, 0)
#         await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id,caption="<b>üëã –ü—Ä–∏–≤–µ—Ç! –†–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–π VPN-—Å–µ–º—å–µ!\n\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –±–µ–∑–æ–ø–∞—Å–Ω—ã–º –∏ —Å–≤–æ–±–æ–¥–Ω—ã–º –¥–æ—Å—Ç—É–ø–æ–º –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.\n\nüöÄ –ù–∞—à–∏ —Å–µ—Ä–≤–µ—Ä—ã –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –≤—ã—Å–æ–∫—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å, –∞ –≤–∞—à–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –ø–æ–¥ –∑–∞—â–∏—Ç–æ–π. </b>",reply_markup=keyboard_start,parse_mode="html")
#     elif call.data == "refvivod":
#         await bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —Ä–µ–∫–≤–∏–∑–∏—Ç—ã\n\n–ü—Ä–∏–º–µ—Ä (1000 79998783784 –°–±–µ—Ä–±–∞–Ω–∫)",reply_markup=kb_backstst)
#         variable.set_action(call.message.chat.id,1)
#     elif call.data == "connect":
#         a = checkcfg(call.message.chat.id)
#         if a != None:
            
#             await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f"<b>–í–∞—à–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è\n\n<code>{a}</code></b>",reply_markup=kb_insts,parse_mode="html")
#         else:
#             await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f"<b>–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤—ã–±–µ—Ä–µ—Ç–µ –Ω—É–∂–Ω—ã–π —Ç–∞—Ä–∏—Ñ –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ –±—ã –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é</b>",reply_markup=kb_tarif,parse_mode="html")
    
#     elif call.data == "Ios":
#         await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id,caption="<b>1</b>",reply_markup=kb_back,parse_mode="html")
#     elif call.data == "Android":
#         await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id,caption="<b>2</b>",reply_markup=kb_back,parse_mode="html")
#     elif call.data == "Windows":
#         await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id,caption="<b>3</b>",reply_markup=kb_back,parse_mode="html")
#     elif call.data == "MacOs":
#         await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id,caption="<b>4</b>",reply_markup=kb_back,parse_mode="html")
    
#     elif call.data == "Ios_1":
#         await bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.message_id,text="<b>1</b>",reply_markup=kb_backststttttt,parse_mode="html")
#     elif call.data == "Android_1":
#         await bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.message_id,text="<b>2</b>",reply_markup=kb_backststttttt,parse_mode="html")
#     elif call.data == "Windows_1":
#         await bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.message_id,text="<b>3</b>",reply_markup=kb_backststttttt,parse_mode="html")
#     elif call.data == "MacOs_1":
#         await bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.message_id,text="<b>4</b>",reply_markup=kb_backststttttt,parse_mode="html")
    
#     elif call.data == "tarifs":
#         await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption="<b>üóí –¢–ê–†–ò–§–ù–´–ô –ü–õ–ê–ù üóí\n\n1 –ú–ï–°–Ø–¶ - 149—Ä\n\n3 –ú–ï–°–Ø–¶–ê - 339—Ä\n\n–ü–û–õ –ì–û–î–ê - 619—Ä\n\n–ì–û–î - 1139—Ä</b>",reply_markup=kb_back,parse_mode="html")

#     elif call.data == "startphoto":
#         await bot.send_photo(chat_id=call.message.chat.id, photo=open('start.png','rb'),caption="<b>üëã –ü—Ä–∏–≤–µ—Ç! –†–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–π VPN-—Å–µ–º—å–µ!\n\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –±–µ–∑–æ–ø–∞—Å–Ω—ã–º –∏ —Å–≤–æ–±–æ–¥–Ω—ã–º –¥–æ—Å—Ç—É–ø–æ–º –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.\n\nüöÄ –ù–∞—à–∏ —Å–µ—Ä–≤–µ—Ä—ã –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –≤—ã—Å–æ–∫—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å, –∞ –≤–∞—à–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –ø–æ–¥ –∑–∞—â–∏—Ç–æ–π. </b>",reply_markup=keyboard_start,parse_mode="html")

        
#     elif call.data == "backst":
#         variable.set_action(call.message.chat.id, 0)
#         await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id,caption="<b>üëã –ü—Ä–∏–≤–µ—Ç! –†–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–π VPN-—Å–µ–º—å–µ!\n\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –±–µ–∑–æ–ø–∞—Å–Ω—ã–º –∏ —Å–≤–æ–±–æ–¥–Ω—ã–º –¥–æ—Å—Ç—É–ø–æ–º –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.\n\nüöÄ –ù–∞—à–∏ —Å–µ—Ä–≤–µ—Ä—ã –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –≤—ã—Å–æ–∫—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å, –∞ –≤–∞—à–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –ø–æ–¥ –∑–∞—â–∏—Ç–æ–π. </b>",reply_markup=keyboard_start,parse_mode="html")
#     else:
#         if call.data.startswith("check_"):
#             result = await check(call.data.split('_')[1])
#             val = call.data.split('_')[2]
#             if result:
#                 print(1)
#                 addbal(call.message.chat.id, val)
#                 await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,text=f"–£—Å–ø–µ—à–Ω–æ –∑–∞—á–∏—Å–ª–µ–Ω –±–∞–ª–∞–Ω—Å –Ω–∞ —Å—É–º–º—É {val}",reply_markup=kb_backmain)
#                 a = getref(call.message.chat.id)
#                 addrefbal(a,int(int(val)//20))
#                 await bot.send_message(chat_id=a,text=f"–ù–∞—á–∏—Å–ª–µ–Ω —Ä–µ—Ñ –±–∞–ª–∞–Ω—Å –Ω–∞ —Å—É–º–º—É {int(val)//20}")
#             else:
#                 await bot.send_message(call.message.chat.id, "–í–∞—à–∞ –æ–ø–ª–∞—Ç–∞ –µ—â–µ –Ω–µ –ø—Ä–æ—à–ª–∞\n\n–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏",reply_markup=kb_admin)
        
#         elif call.data.startswith("prodl_"):
#             mail = call.data.split('_')[1]
#             a = getbalance(call.message.chat.id)
#             kb_prodlenye = types.InlineKeyboardMarkup(row_width=2)
#             kp1 = types.InlineKeyboardButton(text="üìÜ 1 –ú–ï–°–Ø–¶ - 149",callback_data=f"t1_{mail}")
#             kp2 = types.InlineKeyboardButton(text="üìÜ 3 –ú–ï–°–Ø–¶–ê - 339",callback_data=f"t2_{mail}")
#             kp3 = types.InlineKeyboardButton(text="üìÜ –ü–û–õ–ì–û–î–ê - 619",callback_data=f"t3_{mail}")
#             kp4 = types.InlineKeyboardButton(text="üìÜ –ì–û–î - 1139",callback_data=f"t4_{mail}")
#             backbtn = types.InlineKeyboardButton(text="–ù–ê–ó–ê–î ‚óÄÔ∏è",callback_data="backst")
#             kb_prodlenye.add(kp1,kp2,kp3,kp4,backbtn)
#             await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f"–í—ã–±–µ—Ä–µ—Ç–µ —Å—Ä–æ–∫ –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ {mail}\n\n–í–∞—à –±–∞–ª–∞–Ω—Å {a}",reply_markup=kb_prodlenye)
#         elif call.data.startswith("t1_"):
#             mail = call.data.split('_')[1]

#             a = checkbal(call.message.chat.id, 149)
#             if a:
#                 minbal(call.message.chat.id,149)
#                 unoxxx = print_and_convert_to_unix(30)
#                 url = getipbymail(mail)
#                 print(url)
#                 session = await sessionid(f"http://{url}:22054/login")
#                 vless_cfg = getvless(mail)
#                 ids = call.message.chat.id
#                 val = 30
#                 a = construatecfg(mail,session,url,ids,val)
#                 if a:
#                     await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id, caption = f"–£—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–ª–µ–Ω –Ω–∞ 30 –¥–Ω–µ–π\n\n–í–∞—à –∫–æ–Ω—Ñ–∏–≥<code>\n\n{vless_cfg}</code>\n\n—á—Ç–æ –±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –Ω—É–∂–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é",reply_markup=kb_insts,parse_mode="html")
#                 else:
#                     print("error updatecfg")
#             else:
#                 await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id,caption =  f"–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ",reply_markup=kb_popln)
            
#         elif call.data.startswith("t2_"):
#             mail = call.data.split('_')[1]

#             a = checkbal(call.message.chat.id, 339)
#             if a:
#                 minbal(call.message.chat.id,339)
#                 unoxxx = print_and_convert_to_unix(90)
#                 url = getipbymail(mail)
                
#                 session = await sessionid(f"http://{url}:22054/login")
#                 vless_cfg = getvless(mail)
#                 ids = call.message.chat.id
#                 val = 90
#                 print(123333333333333333333333333333333333333333333333)
#                 a = construatecfg(mail,session,url,ids,val)
#                 if a:
#                     await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id, caption = f"–£—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–ª–µ–Ω –Ω–∞ 90 –¥–Ω–µ–π\n\n–í–∞—à –∫–æ–Ω—Ñ–∏–≥<code>\n\n{vless_cfg}</code>\n\n—á—Ç–æ –±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –Ω—É–∂–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é",reply_markup=kb_insts,parse_mode="html")
#                 else:
#                     print("error updatecfg")
#             else:
#                 await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id,caption =  f"–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ",reply_markup=kb_popln)
#         elif call.data.startswith("t3_"):
#             mail = call.data.split('_')[1]

#             a = checkbal(call.message.chat.id, 619)
#             if a:
#                 minbal(call.message.chat.id,619)
#                 unoxxx = print_and_convert_to_unix(180)
#                 url = getipbymail(mail)
#                 print(url)
#                 session = await sessionid(f"http://{url}:22054/login")
#                 vless_cfg = getvless(mail)
#                 ids = call.message.chat.id
#                 val = 180
#                 a = construatecfg(mail,session,url,ids,val)
#                 if a:
#                     await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id, caption = f"–£—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–ª–µ–Ω –Ω–∞ 180 –¥–Ω–µ–π\n\n–í–∞—à –∫–æ–Ω—Ñ–∏–≥<code>\n\n{vless_cfg}</code>\n\n—á—Ç–æ –±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –Ω—É–∂–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é",reply_markup=kb_insts,parse_mode="html")
#                 else:
#                     print("error updatecfg")
#             else:
#                 await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id,caption =  f"–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ",reply_markup=kb_popln)
#         elif call.data.startswith("t4_"):
#             mail = call.data.split('_')[1]

#             a = checkbal(call.message.chat.id, 1139)
#             if a:
#                 minbal(call.message.chat.id,1139)
#                 unoxxx = print_and_convert_to_unix(365)
#                 url = getipbymail(mail)
#                 print(url)
#                 session = await sessionid(f"http://{url}:22054/login")
#                 vless_cfg = getvless(mail)
#                 ids = call.message.chat.id
#                 val = 365
#                 a = construatecfg(mail,session,url,ids,val)
#                 if a:
#                     await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id, caption = f"–£—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–ª–µ–Ω –Ω–∞ 365 –¥–Ω–µ–π\n\n–í–∞—à –∫–æ–Ω—Ñ–∏–≥<code>\n\n{vless_cfg}</code>\n\n—á—Ç–æ –±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –Ω—É–∂–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é",reply_markup=kb_insts,parse_mode="html")
#                 else:
#                     print("error updatecfg")
#             else:
#                 await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id,caption =  f"–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ",reply_markup=kb_popln)
        
#         else:
#             try:
#                 a = getvless(call.data)
#                 mail = a.split("#")[1]
#                 kb_connect = types.InlineKeyboardMarkup(row_width=1)
#                 kcc1 = types.InlineKeyboardButton(text="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è",callback_data="ins")
#                 kcc2 = types.InlineKeyboardButton(text="–ü–û–î–ö–õ–Æ–ß–ò–¢–¨–°–Ø",url=f"https://vpn-connector.netlify.app/?url={a}")
#                 kcc3 = types.InlineKeyboardButton(text="–ü—Ä–æ–¥–ª–∏—Ç—å",callback_data=f"prodl_{mail}")
#                 backbtn = types.InlineKeyboardButton(text="–ù–ê–ó–ê–î ‚óÄÔ∏è",callback_data="backst")
#                 kb_connect.add(kcc1,kcc2,kcc3,backbtn)
#                 await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id,caption= f"–í–∞—à–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è \n\n<code>{a}</code>",reply_markup=kb_connect,parse_mode="html")
#             except:
#                 pass
# async def is_user_subscribed(user_id: int) -> bool:
#     try:
#         chat_member = await bot.get_chat_member(CHANNEL_ID, user_id)
#         return chat_member.status in ["member", "administrator", "creator"]
#     except Exception as e:
#         print(f"–û—à–∏–±–∫–∞: {e}")
#         return False



# @dp.message_handler(lambda message: True, content_types=['text', 'photo'])
# async def handle_text(message: types.Message):
#     text = message.text
#     action = int(variable.get_action(message.chat.id))

#     if action == 1:
#         try:
#             a = int(text.split(" ")[0])
#             print(212412412412214124412412,message.chat.id,refbala(str(message.chat.id)))
#             b = int(refbala(message.chat.id))
#             if a <= b:
#                 minref(message.chat.id,a)
#                 print("allokey")
#                 await bot.send_message(chat_id=partner_chat,text=f"–í—ã–≤–æ–¥ –†–µ—Ñ–µ—Ä–∞–ª–∞ {message.chat.id}\n\n–ù–∞ —Å—É–º–º—É {a}\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username}")
#                 await bot.send_message(message.chat.id, f"–£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –∑–∞—è–≤–∫–∞\n–û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n–í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å —Å–ø–∏—Å–∞–Ω –Ω–∞ —Å—É–º–º—É {a}",reply_markup=kb_backmain)
#             else:
#                 await bot.send_message(message.chat.id, "–ù–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Ñ –±–∞–ª–∞–Ω—Å–∞",reply_markup=kb_backststttttt)
#                 variable.set_action(message.chat.id, 0)
#         except:
#             await bot.send_message(message.chat.id, "–ù–µ –≤–µ—Ä–Ω–æ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –∑–∞—è–≤–∫–∞",reply_markup=kb_backststttttt)
#             variable.set_action(message.chat.id, 0)
#     elif action == 2:
#         try:
#             amount = int(text)
#             email = "963-52@mail.ru"  # –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
#             items = [
#             {
#                 "description": "–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞",
#                 "quantity": 1,
#                 "amount": {
#                     "value": f"{amount:.2f}",
#                     "currency": "RUB"
#                 },
#                 "vat_code": 1
#             }
#         ]
        
#         # –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂ —Å –¥–∞–Ω–Ω—ã–º–∏ —á–µ–∫–∞
#             payment_url, payment_id = await create(amount, message.chat.id, email, items)
#             # payment_url, payment_id = await create(amount, message.chat.id, email)
            

#             print(payment_url,payment_id)
            
#             kb_oplata = types.InlineKeyboardMarkup(row_width=1)
#             o1 = types.InlineKeyboardButton(text="–û–ü–õ–ê–¢–ò–¢–¨",url=payment_url)
#             o2 = types.InlineKeyboardButton(text="–ü–†–û–í–ï–†–ò–¢–¨ –û–ü–õ–ê–¢–£",callback_data=f"check_{payment_id}_{message.text}")
#             o3 = types.InlineKeyboardButton(text="–ù–ê–ó–ê–î ‚óÄÔ∏è",callback_data="startphoto")
#             kb_oplata.add(o1,o2,o3)
#             await bot.send_message(chat_id=message.chat.id,text="–û–ø–ª–∞—Ç–∏—Ç–µ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ, –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –æ–ø–ª–∞—Ç—É",reply_markup=kb_oplata)
#         except:
#             await bot.send_message(chat_id=message.chat.id,text="–ù–µ –≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω–∞ —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è",reply_markup=kb_backststttttt)

#     elif action == 10:
#         print(str(message.text))
#         addserverinlist(str(message.text))



# async def check_server():
#     try:
#         async with aiohttp.ClientSession() as session:
#             async with session.get(SERVER_URL, ssl=False) as response:
#                 if response.status == 200:
#                     return "üü¢ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω"
#                 else:
#                     return "üî¥ –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
#     except aiohttp.ClientError:
#         return "üî¥ –°–µ—Ä–≤–µ—Ä –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"



# #all func 
# async def login():
#     try:
#         async with aiohttp.ClientSession() as session:
#             async with session.post(LOGIN_URL, data=LOGIN_DATA) as response:
#                 if response.status == 200:
#                     cookies = response.cookies
#                     session_id = cookies.get("3x-ui").value if "3x-ui" in cookies else None
#                     if session_id:
#                         bot_logger.info(f"Session ID: {session_id}")
#                         return session_id
#                     else:
#                         bot_logger.error("Session ID not found in cookies")
#                         return None
#                 else:
#                     bot_logger.error(f"Failed to log in, status code: {response.status}")
#                     return None
#     except:
#         print("HUETA")            




    


# if __name__ == '__main__':
#   # –ó–∞–ø—É—Å–∫ –≤–∞—à–µ–≥–æ —Ü–∏–∫–ª–∞ –∫–∞–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏
#     executor.start_polling(dp, skip_updates=True)

















































###################################################33

from db import *
import utils
from datetime import datetime
from aiogram import Bot, Dispatcher, types
from aiogram.types import ParseMode
from aiogram import executor
from config import *
from keyboards import *
import time
import asyncio, json, logging, qrcode, random, re, sqlite3, string, datetime
from datetime import datetime as dt
from io import BytesIO
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ParseMode, User
from aiogram.types.message import ContentType
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher import FSMContext
from logging.handlers import RotatingFileHandler
import aiohttp
from config import TOKEN
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import asyncio
import datetime

bot = Bot(token=TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())
variable = utils.Variable()


@dp.message_handler(commands=['admin'])
async def admin_panel(message: types.Message):
    if message.chat.id == admin_id:
        a = allusers()
        await bot.send_message(message.chat.id, f"–ê–î–ú–ò–ù –ü–ê–ù–ï–õ–¨\n\n–í–°–ï–ì–û –ö–û–ù–§–ò–ì–û–í {a}",reply_markup=kb_admin_panel)

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    add = checkuser(message.chat.id)
    if add:
        await bot.send_photo(chat_id=message.chat.id,photo=open('start.png', 'rb'),caption="<b>üëã –ü—Ä–∏–≤–µ—Ç! –†–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–π VPN-—Å–µ–º—å–µ!\n\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –±–µ–∑–æ–ø–∞—Å–Ω—ã–º –∏ —Å–≤–æ–±–æ–¥–Ω—ã–º –¥–æ—Å—Ç—É–ø–æ–º –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.\n\nüöÄ –ù–∞—à–∏ —Å–µ—Ä–≤–µ—Ä—ã –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –≤—ã—Å–æ–∫—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å, –∞ –≤–∞—à–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –ø–æ–¥ –∑–∞—â–∏—Ç–æ–π. </b>",reply_markup=keyboard_start,parse_mode="html")

    else:
       
        referral_code = message.text[7:]
        print(referral_code)
        if len(referral_code)>2:
            adduserref(message.chat.id,referral_code)
        else:
            adduser(message.chat.id)
        
        await bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç! {message.from_user.username}\n–í–∏–∂—É —Ç—ã —Ç—É—Ç –≤–ø–µ—Ä–≤—ã–µ. –£ –Ω–∞—Å –¥–ª—è –¢–ï–ë–Ø –ø–æ–¥–∞—Ä–æ—á–Ω—ã–π –≤–ø–Ω –Ω–∞ 7 –î–ù–ï–ô\n–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ –±—ã –∏–º –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è",reply_markup=kb_next)
        





@dp.callback_query_handler(lambda call: True)
async def print_all_commands(call: types.CallbackQuery):
    if call.data == "try3":
      session_id = await login()
      if session_id:
          telegram_id = call.message.from_user.id
          
          user = trialcheck(telegram_id)

          if user:
              await call.message.answer("‚ùå –í–∞–º —É–∂–µ –≤—ã–¥–∞–≤–∞–ª—Å—è –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ üßê")
              bot_logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {telegram_id} –ø–æ–ø—ã—Ç–∞–ª—Å—è –ø–æ–≤—Ç–æ—Ä–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥.")
          else:
              id_vless = 1
              email = ''.join(random.choices(string.ascii_lowercase + string.digits, k=12))
              expiry_time = -259200000
              await call.message.answer(f"‚úÖ –ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! \n–í–∞—à –ª–æ–≥–∏–Ω: {email}")
              #await add_client(call.message, email, expiry_time, id_vless, call.message.from_user.id)
              bot_logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {call.message.from_user.id} –Ω–∞—á–∞–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥.")
      else:
          await call.message.answer("‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏.")
          bot_logger.error("–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞.")
    elif call.data == "freeevpn":
        await bot.send_message(call.message.chat.id,"–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –¢–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª –∏ —Å—Ä–∞–∑—É –ø–æ–ª—É—á–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π VPN",reply_markup=kbkanal)
    elif call.data == "podpiska":
        try:
            a = getactualdata(call.message.chat.id)
            print(a)
            ip = getipfromemail(a)
            url = f"http://{ip}:2053/login"
            session = await sessionid(url)
            day = await listall(ip, session, a)
            if day != None:
                kb_prodlenye = types.InlineKeyboardMarkup(row_width=1)
                kp1 = types.InlineKeyboardButton(text="üìÜ 1 –ú–ï–°–Ø–¶ - 79",callback_data=f"t1_{a}")
                kp2 = types.InlineKeyboardButton(text="üìÜ 3 –ú–ï–°–Ø–¶–ê - 229",callback_data=f"t2_{a}")
                kp4 = types.InlineKeyboardButton(text="üìÜ –ì–û–î - 899",callback_data=f"t4_{a}")
                backbtn = types.InlineKeyboardButton(text="–ù–ê–ó–ê–î ‚óÄÔ∏è",callback_data="backst")
                kb_prodlenye.add(kp1,kp2,kp4,backbtn)
                await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id,caption = f"–ê–∫—Ç–∏–≤–Ω–æ –¥–æ {day}\n–ü—Ä–æ–¥–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∫–Ω–æ–ø–∫–∞–º –Ω–∏–∂–µ",reply_markup=kb_prodlenye,parse_mode="html")
            else:
                await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id,caption = f"–ü–æ–¥–ø–∏—Å–∫–∏ –Ω–µ—Ç, –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –º–æ–∂–Ω–æ –ø–æ –∫–Ω–æ–ø–∫–∞–º –Ω–∏–∂–µ",reply_markup=kb_tarif,parse_mode="html")
        except:
            await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id,caption = f"–ü–æ–¥–ø–∏—Å–∫–∏ –Ω–µ—Ç, –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –º–æ–∂–Ω–æ –ø–æ –∫–Ω–æ–ø–∫–∞–º –Ω–∏–∂–µ",reply_markup=kb_tarif,parse_mode="html")

    elif call.data == "mycfg":
        cfgs = selectcfg(call.message.chat.id)
        print(cfgs)
        keyboard = InlineKeyboardMarkup()
        
        # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –º–∞—Å—Å–∏–≤ –∫–æ—Ä—Ç–µ–∂–µ–π
        for item in cfgs:
            # item[0] —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç –∏ callback_data
            button = InlineKeyboardButton(text=item[0], callback_data=item[0])
            keyboard.add(button)
        backbtn = types.InlineKeyboardButton(text="–ù–ê–ó–ê–î ‚óÄÔ∏è",callback_data="backst")
        keyboard.add(backbtn)
        await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id,caption="<b>üçè –ê–ö–¢–ò–í–ù–´–ï VPN –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø</b>",reply_markup=keyboard,parse_mode="html")
    elif call.data == "donech":
        free = checkfree(call.message.chat.id)
        print(free)
        if free != "1":
            result =  await is_user_subscribed(call.message.chat.id)
            if result:
                unoxxx = print_and_convert_to_unix(7)
                mail = generate_key()
                url,session = await add_client_request(call.message.chat.id,mail,unoxxx)
                print(url,session)
                vless_cfg = createcfgbymail(url,session,mail)
                savecfg(call.message.chat.id,vless_cfg,mail)
                addfreecfg(call.message.chat.id)
                await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text = f"–í–∞—à –∫–æ–Ω—Ñ–∏–≥<code>\n\n{vless_cfg}</code>\n\n—á—Ç–æ –±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –Ω—É–∂–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é",reply_markup=kb_instss,parse_mode="html")
            else:
                await bot.answer_callback_query(callback_query_id=call.id,text= "–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ Telegram –ö–ê–ù–ê–õ",show_alert = True)
        
        else:
            await bot.send_message(call.message.chat.id,"–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–æ–±–Ω—ã–π VPN")
    elif call.data == "backsts_1":
        await bot.send_photo(chat_id=call.message.chat.id,photo=open('start.png', 'rb'),caption="<b>üëã –ü—Ä–∏–≤–µ—Ç! –†–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–π VPN-—Å–µ–º—å–µ!\n\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –±–µ–∑–æ–ø–∞—Å–Ω—ã–º –∏ —Å–≤–æ–±–æ–¥–Ω—ã–º –¥–æ—Å—Ç—É–ø–æ–º –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.\n\nüöÄ –ù–∞—à–∏ —Å–µ—Ä–≤–µ—Ä—ã –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –≤—ã—Å–æ–∫—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å, –∞ –≤–∞—à–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –ø–æ–¥ –∑–∞—â–∏—Ç–æ–π. </b>",reply_markup=keyboard_start,parse_mode="html")

    
    elif call.data == "balance":
        bal = int(getbalance(call.message.chat.id))
        await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f"üë§ –í–∞—à id {call.message.chat.id}\n\n<b>üí∞ –ë–∞–ª–∞–Ω—Å  {bal}</b>\n",reply_markup=kb_balance,parse_mode='html')
    elif call.data == "addcash":
        # await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f"–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è",reply_markup=kb_back,parse_mode='html')
        await bot.edit_message_caption(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        caption="–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—é:",
        reply_markup=kb_select_amount,
        parse_mode='html'
        )
        variable.set_action(call.message.chat.id, 2)

    elif call.data == "addcfg":
        
        await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f"<b>–í–´–ë–ï–†–ï–¢–ï –í–ê–†–ò–ê–ù–¢–´ –ü–û–î–ü–ò–°–ö–ò üìù</b>",reply_markup=kb_tarif,parse_mode='html')
    elif call.data == "addserver":
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,text="–ù–ê–ü–ò–®–ò–¢–ï IP –°–ï–†–í–ï–†–ê",reply_markup=kb_admin_back)
        variable.set_action(call.message.chat.id,10)
    elif call.data == "servers":
        a = serverslist()
        keyboard = InlineKeyboardMarkup()

        # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –º–∞—Å—Å–∏–≤ –∫–æ—Ä—Ç–µ–∂–µ–π
        for item in a:
            # item[0] —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç –∏ callback_data
            button = InlineKeyboardButton(text=item[0], callback_data=f"server_{item[0]}")
            keyboard.add(button)
        addserv = types.InlineKeyboardButton(text="–î–û–ë–ê–í–ò–¢–¨ –°–ï–†–í–ï–†",callback_data="addserver")
        backbtn = types.InlineKeyboardButton(text="–ù–ê–ó–ê–î ‚óÄÔ∏è",callback_data="backad")
        keyboard.add(addserv).row(backbtn)


        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,text="–°–ü–ò–°–û–ö –ê–ö–¢–£–ê–õ–¨–ù–´–• –°–ï–†–í–ï–†–û–í",reply_markup=keyboard)
    elif call.data == "a_balance":
        pass
    

    elif call.data == "allreboot":
        pass
    elif call.data == "backad":
        variable.set_action(call.message.chat.id, 0)
        a = allusers()
        
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,text=f"–ê–î–ú–ò–ù –ü–ê–ù–ï–õ–¨\n\n–í–°–ï–ì–û –ö–û–ù–§–ò–ì–û–í {a}",reply_markup=kb_admin_panel)
    elif call.data == "t1":
        
        a = checkbal(call.message.chat.id, 79)
        
        if a:
            minbal(call.message.chat.id,79)
            unoxxx = print_and_convert_to_unix(30)
            mail = generate_key()
            url,session = await add_client_request(call.message.chat.id,mail,unoxxx)
            print(url,session)
            vless_cfg = createcfgbymail(url,session,mail)
            savecfg(call.message.chat.id,vless_cfg,mail)
            
            await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id, caption = f"–í–∞—à –∫–æ–Ω—Ñ–∏–≥<code>\n\n{vless_cfg}</code>\n\n—á—Ç–æ –±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –Ω—É–∂–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é",reply_markup=kb_insts,parse_mode="html")
        else:
            await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id,caption =  f"–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ",reply_markup=kb_popln)
        

    elif call.data == "t2":
        
        a = checkbal(call.message.chat.id, 229)
        
        if a:
            minbal(call.message.chat.id,229)
            unoxxx = print_and_convert_to_unix(90)
            mail = generate_key()
            url,session = await add_client_request(call.message.chat.id,mail,unoxxx)
            print(url,session)
            vless_cfg = createcfgbymail(url,session,mail)
            savecfg(call.message.chat.id,vless_cfg,mail)
            
            await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id, caption = f"–í–∞—à –∫–æ–Ω—Ñ–∏–≥<code>\n\n{vless_cfg}</code>\n\n—á—Ç–æ –±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –Ω—É–∂–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é",reply_markup=kb_insts,parse_mode="html")
        else:
            await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id,caption =  f"–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ",reply_markup=kb_popln)
        
    elif call.data == "t3":
        
        a = checkbal(call.message.chat.id, 899)
        
        if a:
            minbal(call.message.chat.id,899)
            unoxxx = print_and_convert_to_unix(180)
            mail = generate_key()
            url,session = await add_client_request(call.message.chat.id,mail,unoxxx)
            print(url,session)
            vless_cfg = createcfgbymail(url,session,mail)
            savecfg(call.message.chat.id,vless_cfg,mail)
            
            await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id, caption = f"–í–∞—à –∫–æ–Ω—Ñ–∏–≥<code>\n\n{vless_cfg}</code>\n\n—á—Ç–æ –±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –Ω—É–∂–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é",reply_markup=kb_insts,parse_mode="html")
        else:
            await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id,caption =  f"–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ",reply_markup=kb_popln)
        
    elif call.data == "t4":
        
        a = checkbal(call.message.chat.id, 899)
        
        if a:
            minbal(call.message.chat.id,899)
            unoxxx = print_and_convert_to_unix(365)
            mail = generate_key()
            url,session = await add_client_request(call.message.chat.id,mail,unoxxx)
            print(url,session)
            vless_cfg = createcfgbymail(url,session,mail)
            savecfg(call.message.chat.id,vless_cfg,mail)
            
            await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id, caption = f"–í–∞—à –∫–æ–Ω—Ñ–∏–≥<code>\n\n{vless_cfg}</code>\n\n—á—Ç–æ –±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –Ω—É–∂–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é",reply_markup=kb_insts,parse_mode="html")
        else:
            await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id,caption =  f"–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ",reply_markup=kb_popln)
    

    elif call.data =="h1":
        await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption="–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å–æ–±–∏—Ä–∞–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤\n\n–ü—Ä–∏ –ª—é–±–æ–º –≤–æ–ø—Ä–æ—Å–µ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –°–∞–ø–ø–æ—Ä—Ç—É",reply_markup=kb_back)
        
    elif call.data == "tarif":
      await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption="<b>–ù–ê –í–°–ï–• –¢–ê–†–ò–§–ê–• –ë–ï–ó–õ–ò–ú–ò–¢–ù–´–ô –¢–†–ê–§–ò–ö\n\n–ß—Ç–æ –≤–∞–º –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –Ω–∞—à VPN:\n\nüîí –ó–∞—â–∏—Ç–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏: VPN —à–∏—Ñ—Ä—É–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–µ —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –Ω–µ–≤–æ–∑–º–æ–∂–Ω—ã–º –∏—Ö –ø–µ—Ä–µ—Ö–≤–∞—Ç –∏ —á—Ç–µ–Ω–∏–µ —Ç—Ä–µ—Ç—å–∏–º–∏ –ª–∏—Ü–∞–º–∏. \nüì∫ –î–æ—Å—Ç—É–ø –∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É: –û–±—Ö–æ–¥–∏—Ç–µ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —Å–∞–π—Ç–∞–º –∏ —Å–µ—Ä–≤–∏—Å–∞–º, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –≤ –≤–∞—à–µ–º —Ä–µ–≥–∏–æ–Ω–µ. \nüöÄ –í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å: –ù–∞—à–∏ —Å–µ—Ä–≤–µ—Ä—ã —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –±—ã—Å—Ç—Ä–æ–µ –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.\nüö´ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ä–µ–∫–ª–∞–º—ã: –ò–∑–±–∞–≤—å—Ç–µ—Å—å –æ—Ç –Ω–∞–∑–æ–π–ª–∏–≤–æ–π —Ä–µ–∫–ª–∞–º—ã –∏ —É–≤–µ–ª–∏—á—å—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü.\nüõ°Ô∏è –ó–∞—â–∏—Ç–∞ –æ—Ç –≤–∏—Ä—É—Å–æ–≤: –ù–∞—à VPN –∑–∞—â–∏—â–∞–µ—Ç –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –æ—Ç –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º –∏ –≤–∏—Ä—É—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø–æ–ø–∞—Å—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç.\nüíª –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: VPN –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—Å–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã (Windows, MacOS, Linux, Android, iOS). \n\n–°–¢–û–ò–ú–û–°–¢–¨ –¢–ê–†–ò–§–û–í:\n\n‚Ä¢ üóì –ú–µ—Å—è—Ü: 79 —Ä—É–±. \n‚Ä¢ üóì –î–≤–∞ –º–µ—Å—è—Ü–∞: 299 —Ä—É–±.\n‚Ä¢ üóì –ü–æ–ª–≥–æ–¥–∞: 459 —Ä—É–±.\n‚Ä¢ üóì –ì–æ–¥: 899 —Ä—É–±.</b>",reply_markup=kb_tarif,parse_mode="html")
    elif call.data == "invite":
        refbal = refbala(call.message.chat.id)
        kolvoref = refuser(call.message.chat.id)
        kb_ref_1 =  types.InlineKeyboardMarkup(row_width=1)
        kr = types.InlineKeyboardButton(text="–í—ã–≤–æ–¥",callback_data="refvivod")
        kpod = types.InlineKeyboardButton(text="–ü–û–î–ï–õ–ò–¢–¨–°–Ø",switch_inline_query=f"–ü–†–ò–ô–î–ò –°–Æ–î–ê –ü–ê–ñ {botname}?start={call.message.chat.id}")
        backbtn = types.InlineKeyboardButton(text="–ù–ê–ó–ê–î ‚óÄÔ∏è",callback_data="backst")
        kb_ref_1.add(kr,kpod,backbtn)
        
        await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'<b>–ü–ê–†–¢–ù–ï–†–°–ö–ê–Ø –ü–†–û–ì–†–ê–ú–ú–ê\n\n–£–°–õ–û–í–ò–Ø:\n\n–ü—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –≤–∞—à–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –Ω–∞ –ª—é–±—É—é —Å—É–º–º—É –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 10% –æ—Ç —Å—É–º–º—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞ –≤–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å, —á—Ç–æ –±—ã –≤—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω–µ–∂–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ –∫–Ω–æ–ø–∫—É –≤—ã–≤–æ–¥ –∏ —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –¥–∞–ª–µ–µ –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–∏ 48 —á–∞—Å–æ–≤\n\n–°–°–´–õ–ö–ê </b><code>{botname}?start={call.message.chat.id}</code>\n\n<b>–í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å {refbal}\n\n–ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ {kolvoref}</b>',reply_markup=kb_ref_1,parse_mode="html")
    elif call.data == "backststst":
        variable.set_action(call.message.chat.id, 0)
        await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id,caption="<b>üëã –ü—Ä–∏–≤–µ—Ç! –†–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–π VPN-—Å–µ–º—å–µ!\n\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –±–µ–∑–æ–ø–∞—Å–Ω—ã–º –∏ —Å–≤–æ–±–æ–¥–Ω—ã–º –¥–æ—Å—Ç—É–ø–æ–º –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.\n\nüöÄ –ù–∞—à–∏ —Å–µ—Ä–≤–µ—Ä—ã –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –≤—ã—Å–æ–∫—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å, –∞ –≤–∞—à–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –ø–æ–¥ –∑–∞—â–∏—Ç–æ–π. </b>",reply_markup=keyboard_start,parse_mode="html")

    elif call.data =="help":
        await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id, caption="<b>–í—ã–±–µ—Ä–µ—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é</b>",reply_markup=kb_help,parse_mode="html")
    elif call.data == "backsts":
        variable.set_action(call.message.chat.id, 0)
        await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id,caption="<b>üëã –ü—Ä–∏–≤–µ—Ç! –†–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–π VPN-—Å–µ–º—å–µ!\n\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –±–µ–∑–æ–ø–∞—Å–Ω—ã–º –∏ —Å–≤–æ–±–æ–¥–Ω—ã–º –¥–æ—Å—Ç—É–ø–æ–º –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.\n\nüöÄ –ù–∞—à–∏ —Å–µ—Ä–≤–µ—Ä—ã –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –≤—ã—Å–æ–∫—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å, –∞ –≤–∞—à–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –ø–æ–¥ –∑–∞—â–∏—Ç–æ–π. </b>",reply_markup=keyboard_start,parse_mode="html")
    elif call.data == "refvivod":
        await bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —Ä–µ–∫–≤–∏–∑–∏—Ç—ã\n\n–ü—Ä–∏–º–µ—Ä (1000 79998783784 –°–±–µ—Ä–±–∞–Ω–∫)",reply_markup=kb_backstst)
        variable.set_action(call.message.chat.id,1)
    elif call.data == "connect":
        a = checkcfg(call.message.chat.id)
        if a != None:
            
            await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f"<b>–í–∞—à–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è\n\n<code>{a}</code></b>",reply_markup=kb_insts,parse_mode="html")
        else:
            await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f"<b>–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤—ã–±–µ—Ä–µ—Ç–µ –Ω—É–∂–Ω—ã–π —Ç–∞—Ä–∏—Ñ –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ –±—ã –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é</b>",reply_markup=kb_tarif,parse_mode="html")
    
    elif call.data == "Ios":
        await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id,caption="<b>1</b>",reply_markup=kb_back,parse_mode="html")
    elif call.data == "Android":
        await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id,caption="<b>2</b>",reply_markup=kb_back,parse_mode="html")
    elif call.data == "Windows":
        await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id,caption="<b>3</b>",reply_markup=kb_back,parse_mode="html")
    elif call.data == "MacOs":
        await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id,caption="<b>4</b>",reply_markup=kb_back,parse_mode="html")
    
    elif call.data == "Ios_1":
        await bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.message_id,text="<b>1</b>",reply_markup=kb_backststttttt,parse_mode="html")
    elif call.data == "Android_1":
        await bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.message_id,text="<b>2</b>",reply_markup=kb_backststttttt,parse_mode="html")
    elif call.data == "Windows_1":
        await bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.message_id,text="<b>3</b>",reply_markup=kb_backststttttt,parse_mode="html")
    elif call.data == "MacOs_1":
        await bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.message_id,text="<b>4</b>",reply_markup=kb_backststttttt,parse_mode="html")
    
    elif call.data == "tarifs":
        await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption="<b>üóí –¢–ê–†–ò–§–ù–´–ô –ü–õ–ê–ù üóí\n\n1 –ú–ï–°–Ø–¶ - 79—Ä\n\n3 –ú–ï–°–Ø–¶–ê - 229—Ä\n\n–ì–û–î - 899—Ä</b>",reply_markup=kb_back,parse_mode="html")

    elif call.data == "startphoto":
        await bot.send_photo(chat_id=call.message.chat.id, photo=open('start.png','rb'),caption="<b>üëã –ü—Ä–∏–≤–µ—Ç! –†–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–π VPN-—Å–µ–º—å–µ!\n\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –±–µ–∑–æ–ø–∞—Å–Ω—ã–º –∏ —Å–≤–æ–±–æ–¥–Ω—ã–º –¥–æ—Å—Ç—É–ø–æ–º –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.\n\nüöÄ –ù–∞—à–∏ —Å–µ—Ä–≤–µ—Ä—ã –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –≤—ã—Å–æ–∫—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å, –∞ –≤–∞—à–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –ø–æ–¥ –∑–∞—â–∏—Ç–æ–π. </b>",reply_markup=keyboard_start,parse_mode="html")

        
    elif call.data == "backst":
        variable.set_action(call.message.chat.id, 0)
        await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id,caption="<b>üëã –ü—Ä–∏–≤–µ—Ç! –†–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–π VPN-—Å–µ–º—å–µ!\n\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –±–µ–∑–æ–ø–∞—Å–Ω—ã–º –∏ —Å–≤–æ–±–æ–¥–Ω—ã–º –¥–æ—Å—Ç—É–ø–æ–º –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.\n\nüöÄ –ù–∞—à–∏ —Å–µ—Ä–≤–µ—Ä—ã –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –≤—ã—Å–æ–∫—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å, –∞ –≤–∞—à–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –ø–æ–¥ –∑–∞—â–∏—Ç–æ–π. </b>",reply_markup=keyboard_start,parse_mode="html")
    else:
        if call.data.startswith("check_"):
            result = await check(call.data.split('_')[1])
            val = call.data.split('_')[2]
            valueRef = int(int(val/100) * 30)
            if result:
                print(1)
                addbal(call.message.chat.id, val)
                await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,text=f"–£—Å–ø–µ—à–Ω–æ –∑–∞—á–∏—Å–ª–µ–Ω –±–∞–ª–∞–Ω—Å –Ω–∞ —Å—É–º–º—É {valueRef}",reply_markup=kb_backmain)
                a = getref(call.message.chat.id)
                addrefbal(a,valueRef)
                await bot.send_message(chat_id=a,text=f"–ù–∞—á–∏—Å–ª–µ–Ω —Ä–µ—Ñ –±–∞–ª–∞–Ω—Å –Ω–∞ —Å—É–º–º—É {valueRef}")
            else:
                await bot.send_message(call.message.chat.id, "–í–∞—à–∞ –æ–ø–ª–∞—Ç–∞ –µ—â–µ –Ω–µ –ø—Ä–æ—à–ª–∞\n\n–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏",reply_markup=kb_admin)
        
        elif call.data.startswith("prodl_"):
            mail = call.data.split('_')[1]
            a = getbalance(call.message.chat.id)
            kb_prodlenye = types.InlineKeyboardMarkup(row_width=2)
            kp1 = types.InlineKeyboardButton(text="üìÜ 1 –ú–ï–°–Ø–¶ - 79",callback_data=f"t1_{mail}")
            kp2 = types.InlineKeyboardButton(text="üìÜ 3 –ú–ï–°–Ø–¶–ê - 229",callback_data=f"t2_{mail}")
            kp3 = types.InlineKeyboardButton(text="üìÜ –ü–û–õ–ì–û–î–ê - 459",callback_data=f"t3_{mail}")
            kp4 = types.InlineKeyboardButton(text="üìÜ –ì–û–î - 899",callback_data=f"t4_{mail}")
            backbtn = types.InlineKeyboardButton(text="–ù–ê–ó–ê–î ‚óÄÔ∏è",callback_data="backst")
            kb_prodlenye.add(kp1,kp2,kp3,kp4,backbtn)
            await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f"–í—ã–±–µ—Ä–µ—Ç–µ —Å—Ä–æ–∫ –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ {mail}\n\n–í–∞—à –±–∞–ª–∞–Ω—Å {a}",reply_markup=kb_prodlenye)
        elif call.data.startswith("t1_"):
            mail = call.data.split('_')[1]

            a = checkbal(call.message.chat.id, 79)
            if a:
                minbal(call.message.chat.id,79)
                unoxxx = print_and_convert_to_unix(30)
                url = getipbymail(mail)
                print(url)
                session = await sessionid(f"http://{url}:2053/login")
                vless_cfg = getvless(mail)
                ids = call.message.chat.id
                val = 30
                a = construatecfg(mail,session,url,ids,val)
                if a:
                    await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id, caption = f"–£—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–ª–µ–Ω –Ω–∞ 30 –¥–Ω–µ–π\n\n–í–∞—à –∫–æ–Ω—Ñ–∏–≥<code>\n\n{vless_cfg}</code>\n\n—á—Ç–æ –±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –Ω—É–∂–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é",reply_markup=kb_insts,parse_mode="html")
                else:
                    print("error updatecfg")
            else:
                await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id,caption =  f"–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ",reply_markup=kb_popln)
            
        elif call.data.startswith("t2_"):
            mail = call.data.split('_')[1]

            a = checkbal(call.message.chat.id, 229)
            if a:
                minbal(call.message.chat.id,229)
                unoxxx = print_and_convert_to_unix(90)
                url = getipbymail(mail)
                
                session = await sessionid(f"http://{url}:2053/login")
                vless_cfg = getvless(mail)
                ids = call.message.chat.id
                val = 90
                print(123333333333333333333333333333333333333333333333)
                a = construatecfg(mail,session,url,ids,val)
                if a:
                    await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id, caption = f"–£—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–ª–µ–Ω –Ω–∞ 90 –¥–Ω–µ–π\n\n–í–∞—à –∫–æ–Ω—Ñ–∏–≥<code>\n\n{vless_cfg}</code>\n\n—á—Ç–æ –±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –Ω—É–∂–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é",reply_markup=kb_insts,parse_mode="html")
                else:
                    print("error updatecfg")
            else:
                await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id,caption =  f"–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ",reply_markup=kb_popln)
        elif call.data.startswith("t3_"):
            mail = call.data.split('_')[1]

            a = checkbal(call.message.chat.id, 459)
            if a:
                minbal(call.message.chat.id,459)
                unoxxx = print_and_convert_to_unix(180)
                url = getipbymail(mail)
                print(url)
                session = await sessionid(f"http://{url}:2053/login")
                vless_cfg = getvless(mail)
                ids = call.message.chat.id
                val = 180
                a = construatecfg(mail,session,url,ids,val)
                if a:
                    await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id, caption = f"–£—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–ª–µ–Ω –Ω–∞ 180 –¥–Ω–µ–π\n\n–í–∞—à –∫–æ–Ω—Ñ–∏–≥<code>\n\n{vless_cfg}</code>\n\n—á—Ç–æ –±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –Ω—É–∂–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é",reply_markup=kb_insts,parse_mode="html")
                else:
                    print("error updatecfg")
            else:
                await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id,caption =  f"–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ",reply_markup=kb_popln)
        elif call.data.startswith("t4_"):
            mail = call.data.split('_')[1]

            a = checkbal(call.message.chat.id, 899)
            if a:
                minbal(call.message.chat.id,899)
                unoxxx = print_and_convert_to_unix(365)
                url = getipbymail(mail)
                print(url)
                session = await sessionid(f"http://{url}:2053/login")
                vless_cfg = getvless(mail)
                ids = call.message.chat.id
                val = 365
                a = construatecfg(mail,session,url,ids,val)
                if a:
                    await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id, caption = f"–£—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–ª–µ–Ω –Ω–∞ 365 –¥–Ω–µ–π\n\n–í–∞—à –∫–æ–Ω—Ñ–∏–≥<code>\n\n{vless_cfg}</code>\n\n—á—Ç–æ –±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –Ω—É–∂–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é",reply_markup=kb_insts,parse_mode="html")
                else:
                    print("error updatecfg")
            else:
                await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id,caption =  f"–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ",reply_markup=kb_popln)
        

        elif call.data.startswith("amount_"):
            if call.data == "amount_manual":
                await bot.send_message(
                    call.message.chat.id, 
                    "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Ä—É—á–Ω—É—é:",
                    reply_markup=kb_back
                )
                variable.set_action(call.message.chat.id, 2)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞
            else:
                # –ü–æ–ª—É—á–∞–µ–º —Å—É–º–º—É –∏–∑ callback_data
                amount = int(call.data.split("_")[1])
                email = "example@mail.com"  # –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                items = [
                    {
                        "description": "–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞",
                        "quantity": 1,
                        "amount": {
                            "value": f"{amount:.2f}",
                            "currency": "RUB"
                        },
                        "vat_code": 1
                    }
                ]

                # –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂
                payment_url, payment_id = await create(amount, call.message.chat.id, email, items)
                kb_oplata = InlineKeyboardMarkup(row_width=1)
                kb_oplata.add(
                    InlineKeyboardButton(text="–û–ü–õ–ê–¢–ò–¢–¨", url=payment_url),
                    InlineKeyboardButton(text="–ü–†–û–í–ï–†–ò–¢–¨ –û–ü–õ–ê–¢–£", callback_data=f"check_{payment_id}_{amount}"),
                    InlineKeyboardButton(text="–ù–ê–ó–ê–î ‚óÄÔ∏è", callback_data="startphoto")
                )

                await bot.send_message(
                    chat_id=call.message.chat.id,
                    text="–û–ø–ª–∞—Ç–∏—Ç–µ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ, –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –æ–ø–ª–∞—Ç—É",
                    reply_markup=kb_oplata
                )
        else:
            try:
                a = getvless(call.data)
                mail = a.split("#")[1]
                kb_connect = types.InlineKeyboardMarkup(row_width=1)
                kcc1 = types.InlineKeyboardButton(text="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è",callback_data="ins")
                kcc2 = types.InlineKeyboardButton(text="–ü–û–î–ö–õ–Æ–ß–ò–¢–¨–°–Ø",url=f"https://vpn-connector.netlify.app/?url={a}")
                kcc3 = types.InlineKeyboardButton(text="–ü—Ä–æ–¥–ª–∏—Ç—å",callback_data=f"prodl_{mail}")
                backbtn = types.InlineKeyboardButton(text="–ù–ê–ó–ê–î ‚óÄÔ∏è",callback_data="backst")
                kb_connect.add(kcc1,kcc2,kcc3,backbtn)
                await bot.edit_message_caption(chat_id=call.message.chat.id,message_id=call.message.message_id,caption= f"–í–∞—à–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è \n\n<code>{a}</code>",reply_markup=kb_connect,parse_mode="html")
            except:
                pass
async def is_user_subscribed(user_id: int) -> bool:
    result = await bot.get_chat_member(CHANNEL_ID, user_id)  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print(f"–ü–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {result}")
    try:
        chat_member = await bot.get_chat_member(CHANNEL_ID, user_id)
        print(chat_member)
        print(chat_member.status)
        return chat_member.status in ["member", "administrator", "creator"]
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        return False





@dp.message_handler(lambda message: True, content_types=['text', 'photo'])
async def handle_text(message: types.Message):
    text = message.text
    action = int(variable.get_action(message.chat.id))

    if action == 1:
        try:
            a = int(text.split(" ")[0])
            print(212412412412214124412412,message.chat.id,refbala(str(message.chat.id)))
            b = int(refbala(message.chat.id))
            if a <= b:
                minref(message.chat.id,a)
                print("allokey")
                await bot.send_message(chat_id=partner_chat,text=f"–í—ã–≤–æ–¥ –†–µ—Ñ–µ—Ä–∞–ª–∞ {message.chat.id}\n\n–ù–∞ —Å—É–º–º—É {a}\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username}")
                await bot.send_message(message.chat.id, f"–£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –∑–∞—è–≤–∫–∞\n–û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n–í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å —Å–ø–∏—Å–∞–Ω –Ω–∞ —Å—É–º–º—É {a}",reply_markup=kb_backmain)
            else:
                await bot.send_message(message.chat.id, "–ù–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Ñ –±–∞–ª–∞–Ω—Å–∞",reply_markup=kb_backststttttt)
                variable.set_action(message.chat.id, 0)
        except:
            await bot.send_message(message.chat.id, "–ù–µ –≤–µ—Ä–Ω–æ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –∑–∞—è–≤–∫–∞",reply_markup=kb_backststttttt)
            variable.set_action(message.chat.id, 0)
    elif action == 2:
        try:
            amount = int(text)
            email = "963-52@mail.ru"  # –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            items = [
            {
                "description": "–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞",
                "quantity": 1,
                "amount": {
                    "value": f"{amount:.2f}",
                    "currency": "RUB"
                },
                "vat_code": 1
            }
        ]
        
        # –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂ —Å –¥–∞–Ω–Ω—ã–º–∏ —á–µ–∫–∞
            payment_url, payment_id = await create(amount, message.chat.id, email, items)
            # payment_url, payment_id = await create(amount, message.chat.id, email)
            

            print(payment_url,payment_id)
            
            kb_oplata = types.InlineKeyboardMarkup(row_width=1)
            o1 = types.InlineKeyboardButton(text="–û–ü–õ–ê–¢–ò–¢–¨",url=payment_url)
            o2 = types.InlineKeyboardButton(text="–ü–†–û–í–ï–†–ò–¢–¨ –û–ü–õ–ê–¢–£",callback_data=f"check_{payment_id}_{message.text}")
            o3 = types.InlineKeyboardButton(text="–ù–ê–ó–ê–î ‚óÄÔ∏è",callback_data="startphoto")
            kb_oplata.add(o1,o2,o3)
            await bot.send_message(chat_id=message.chat.id,text="–û–ø–ª–∞—Ç–∏—Ç–µ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ, –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –æ–ø–ª–∞—Ç—É",reply_markup=kb_oplata)
        except:
            await bot.send_message(chat_id=message.chat.id,text="–ù–µ –≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω–∞ —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è",reply_markup=kb_backststttttt)

    elif action == 10:
        print(str(message.text))
        addserverinlist(str(message.text))


async def check_server():
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(SERVER_URL, ssl=False) as response:
                if response.status == 200:
                    return "üü¢ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω"
                else:
                    return "üî¥ –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    except aiohttp.ClientError:
        return "üî¥ –°–µ—Ä–≤–µ—Ä –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"



#all func 
async def login():
    try:
        async with aiohttp.ClientSession() as session:
            async with session.post(LOGIN_URL, data=LOGIN_DATA) as response:
                if response.status == 200:
                    cookies = response.cookies
                    session_id = cookies.get("3x-ui").value if "3x-ui" in cookies else None
                    if session_id:
                        bot_logger.info(f"Session ID: {session_id}")
                        return session_id
                    else:
                        bot_logger.error("Session ID not found in cookies")
                        return None
                else:
                    bot_logger.error(f"Failed to log in, status code: {response.status}")
                    return None
    except:
        print("HUETA")            




    


if __name__ == '__main__':
  # –ó–∞–ø—É—Å–∫ –≤–∞—à–µ–≥–æ —Ü–∏–∫–ª–∞ –∫–∞–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏
    executor.start_polling(dp, skip_updates=True)

